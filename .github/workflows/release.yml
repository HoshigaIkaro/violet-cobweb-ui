name: release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v2
      - name: install cargo-get
        uses: dtolnay/rust-toolchain@stable
        run: cargo install cargo-get
      - name: get version
        run: cargo get version --pretty
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}`,
              name: `Desktop App v${process.env.PACKAGE_VERSION}`,
              body: 'Download the file in the assets that matches your operating system.',
              draft: true,
              prerelease: false
            })

            return data.id

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: install tauri-cli
        run: |
          pnpm add -D @tauri-apps/cli
      # install trunk as binary
      - name: move trunk to bin dir (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          curl -LOJ https://github.com/thedodd/trunk/releases/download/v0.16.0/trunk-x86_64-pc-windows-msvc.zip
          Extract-Archive trunk-x86_64-pc-windows-msvc.zip .
      - name: move trunk to bin dir (ubuntu only)
        if: matrix.platform != 'ubuntu-20.04'
        run: |
          curl -L https://github.com/thedodd/trunk/releases/download/v0.16.0/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
          sudo mv trunk /usr/local/bin/trunk
      - name: move trunk to bin dir (macos only)
        if: matrix.platform != 'macos-latest'
        run: |
          curl -L https://github.com/thedodd/trunk/releases/download/v0.16.0/trunk-x86_64-apple-darwin.tar.gz | tar -xzf-
          sudo mv trunk /usr/local/bin/trunk

      - name: build app
        run: pnpm tauri build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
